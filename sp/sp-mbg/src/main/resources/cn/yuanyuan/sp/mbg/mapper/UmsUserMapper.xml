<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.yuanyuan.sp.mbg.mapper.UmsUserMapper">
  <resultMap id="BaseResultMap" type="cn.yuanyuan.sp.mbg.model.UmsUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="is_forbid" jdbcType="INTEGER" property="isForbid" />
    <result column="statue" jdbcType="INTEGER" property="statue" />
    <result column="is_notify" jdbcType="INTEGER" property="isNotify" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="liked_book" jdbcType="VARCHAR" property="likedBook" />
    <result column="liked_thing" jdbcType="VARCHAR" property="likedThing" />
    <result column="saying" jdbcType="VARCHAR" property="saying" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, account, name, password, email, avatar, is_forbid, statue, is_notify, type, liked_book, 
    liked_thing, saying
  </sql>
  <select id="selectByExample" parameterType="cn.yuanyuan.sp.mbg.model.UmsUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ums_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ums_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ums_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.yuanyuan.sp.mbg.model.UmsUserExample">
    delete from ums_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.yuanyuan.sp.mbg.model.UmsUser">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ums_user (account, name, password, 
      email, avatar, is_forbid, 
      statue, is_notify, type, 
      liked_book, liked_thing, saying
      )
    values (#{account,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{isForbid,jdbcType=INTEGER}, 
      #{statue,jdbcType=INTEGER}, #{isNotify,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{likedBook,jdbcType=VARCHAR}, #{likedThing,jdbcType=VARCHAR}, #{saying,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.yuanyuan.sp.mbg.model.UmsUser">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ums_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="account != null">
        account,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="isForbid != null">
        is_forbid,
      </if>
      <if test="statue != null">
        statue,
      </if>
      <if test="isNotify != null">
        is_notify,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="likedBook != null">
        liked_book,
      </if>
      <if test="likedThing != null">
        liked_thing,
      </if>
      <if test="saying != null">
        saying,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="isForbid != null">
        #{isForbid,jdbcType=INTEGER},
      </if>
      <if test="statue != null">
        #{statue,jdbcType=INTEGER},
      </if>
      <if test="isNotify != null">
        #{isNotify,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="likedBook != null">
        #{likedBook,jdbcType=VARCHAR},
      </if>
      <if test="likedThing != null">
        #{likedThing,jdbcType=VARCHAR},
      </if>
      <if test="saying != null">
        #{saying,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.yuanyuan.sp.mbg.model.UmsUserExample" resultType="java.lang.Long">
    select count(*) from ums_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ums_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.isForbid != null">
        is_forbid = #{record.isForbid,jdbcType=INTEGER},
      </if>
      <if test="record.statue != null">
        statue = #{record.statue,jdbcType=INTEGER},
      </if>
      <if test="record.isNotify != null">
        is_notify = #{record.isNotify,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.likedBook != null">
        liked_book = #{record.likedBook,jdbcType=VARCHAR},
      </if>
      <if test="record.likedThing != null">
        liked_thing = #{record.likedThing,jdbcType=VARCHAR},
      </if>
      <if test="record.saying != null">
        saying = #{record.saying,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ums_user
    set id = #{record.id,jdbcType=INTEGER},
      account = #{record.account,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      is_forbid = #{record.isForbid,jdbcType=INTEGER},
      statue = #{record.statue,jdbcType=INTEGER},
      is_notify = #{record.isNotify,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      liked_book = #{record.likedBook,jdbcType=VARCHAR},
      liked_thing = #{record.likedThing,jdbcType=VARCHAR},
      saying = #{record.saying,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.yuanyuan.sp.mbg.model.UmsUser">
    update ums_user
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="isForbid != null">
        is_forbid = #{isForbid,jdbcType=INTEGER},
      </if>
      <if test="statue != null">
        statue = #{statue,jdbcType=INTEGER},
      </if>
      <if test="isNotify != null">
        is_notify = #{isNotify,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="likedBook != null">
        liked_book = #{likedBook,jdbcType=VARCHAR},
      </if>
      <if test="likedThing != null">
        liked_thing = #{likedThing,jdbcType=VARCHAR},
      </if>
      <if test="saying != null">
        saying = #{saying,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.yuanyuan.sp.mbg.model.UmsUser">
    update ums_user
    set account = #{account,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      is_forbid = #{isForbid,jdbcType=INTEGER},
      statue = #{statue,jdbcType=INTEGER},
      is_notify = #{isNotify,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      liked_book = #{likedBook,jdbcType=VARCHAR},
      liked_thing = #{likedThing,jdbcType=VARCHAR},
      saying = #{saying,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>